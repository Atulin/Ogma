@page
@using Ogma3.Api.V1
@inject OgmaConfig Cfg
@model Ogma3.Pages.Stories.CreateModel

@{
    ViewData["Title"] = "Create new story";
}

<h1>@ViewData["Title"]</h1>

<form class="form" id="story" method="post" enctype="multipart/form-data" v-on:submit="onSubmit">

    <div asp-validation-summary="All">
        <span>Please correct the following errors</span>
    </div>

    <input-counter ref="title"
                   :min="@CTConfig.CStory.MinTitleLength"
                   :max="@CTConfig.CStory.MaxTitleLength"
                   validate-msg="@CTConfig.CStory.ValidateLengthMsg"
                   label="@nameof(Model.Input.Title)"
                   desc="Try something catchy">
    </input-counter>

    <textarea-counter ref="desc"
                      :min="@CTConfig.CStory.MinDescriptionLength"
                      :max="@CTConfig.CStory.MaxDescriptionLength"
                      validate-msg="@CTConfig.CStory.ValidateLengthMsg"
                      label="@nameof(Model.Input.Description)"
                      desc="The long description, shown when user opens your story's page">
    </textarea-counter>

    <input-counter ref="hook"
                   :min="@CTConfig.CStory.MinHookLength"
                   :max="@CTConfig.CStory.MaxHookLength"
                   validate-msg="@CTConfig.CStory.ValidateLengthMsg"
                   label="@nameof(Model.Input.Hook)"
                   desc="The short description that appears on story lists">
    </input-counter>

    <input-file ref="cover"
                :max="@CTConfig.CStory.CoverMaxWeight"
                validate-msg="@CTConfig.CStory.ValidateFileWeight"
                label="@nameof(Model.Input.Cover)"
                desc="First thing people often notice">
    </input-file>
    
    <input-rating ref="rating"
                  label="@nameof(Model.Input.Rating)"
                  cdn="@Cfg.Cdn"
                  desc="What audience is the story suitable for"
                  ratings-api="@Url.RouteUrl(nameof(RatingsController))">
    </input-rating>
    
    <tag-search-select ref="tags"
                       label="@nameof(Model.Input.Tags)"
                       desc="To make the story easier to find"
                       :min="@CTConfig.CStory.MinTagCount"
                       tags-api="@Url.RouteUrl(nameof(TagsController))"
                       validate-msg="@CTConfig.CStory.ValidateTagCount">
    </tag-search-select>

    <div class="o-form-group">
        <button type="submit" class="btn btn-primary">Create</button>
    </div>

</form>


@section Scripts {
    <script src="~/js/dist/vue-directives/closeable.min.js" asp-append-version="true"></script>
    <script src="~/js/dist/components/input-counter-component.min.js" asp-append-version="true"></script>
    <script src="~/js/dist/components/textarea-counter-component.min.js" asp-append-version="true"></script>
    <script src="~/js/dist/components/input-file-component.min.js" asp-append-version="true"></script>
    <script src="~/js/dist/components/rating-component.min.js" asp-append-version="true"></script>
    <script src="~/js/dist/components/tag-search-select-component.min.js" asp-append-version="true"></script>
    <script src="~/js/dist/editors/story.min.js" asp-append-version="true"></script>
}