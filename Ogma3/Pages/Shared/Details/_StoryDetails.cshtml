@using System.Globalization
@using Ogma3.Api.V1
@using Ogma3.Data.AuthorizationData
@using Ogma3.Data.Enums
@using Ogma3.Infrastructure.Extensions
@using Ogma3.Services
@inject OgmaConfig Config
@model StoryDetails

<div id="story-app">
    <div id="story-details" class="story-details" itemscope itemtype="https://schema.org/Book">

        <div class="actions">

            <button class="votes action-btn large" v-bind:class="didVote ? 'active' : ''" v-on:click="vote" title="Give it a star!">
                <i class="material-icons-outlined">{{didVote ? 'star' : 'star_border'}}</i>
                <span class="count">{{score}}</span>
            </button>
            
            @if (User.Identity?.IsAuthenticated ?? false)
            {
                <a title="Write about it" class="action-btn" asp-page="./Blog/Create" asp-route-story="@Model.Id">
                    <icon class="icon" icon="note_add"></icon>
                    <span class="name">Write about it</span>
                </a>
            }
            
            @if (User.IsUserSameAsLoggedIn(Model.AuthorId))
            {
                <a title="Edit" class="action-btn" asp-page="./Stories/Edit" asp-route-id="@Model.Id">
                    <icon class="icon" icon="edit"></icon>
                    <span class="name">Edit</span>
                </a>
                
                <a title="New chapter" class="action-btn" asp-page="./Chapters/Create" asp-route-id="@Model.Id">
                    <icon class="icon" icon="post_add"></icon>
                    <span class="name">New chapter</span>
                </a>
            }                    
            @if (User.IsInRole(RoleNames.Admin) || User.IsInRole(RoleNames.Moderator))
            {
                <a title="Manage" class="action-btn red" target="_blank"
                   asp-area="Admin" asp-page="/ContentBlock" 
                   asp-route-type="story" asp-route-id="@Model.Id">
                    <icon class="icon" icon="shield"></icon>
                </a>
            }
            @if (!Model.IsPublished)
            {
                <span class="action-btn red">
                    <icon class="icon" icon="visibility_off"></icon>
                </span>
            }
            @if (Model.ContentBlockId != null)
            {
                <span class="action-btn red">
                    <icon class="icon" icon="shield"></icon>
                </span>
            }            
            @if (User.Identity?.IsAuthenticated ?? false)
            {
                <button title="Report" class="action-btn red" v-on:click="report">
                    <icon class="icon" icon="flag"></icon>
                </button>
            }

            @if (User.Identity?.IsAuthenticated ?? false)
            {
                <div class="spacer"></div>
                
                <button
                    v-if="shelves"
                    class="shelf action-btn"
                    v-for="s in shelves.filter(e => e.isQuick || e.isDefault)"
                    :title="'Add to ' + s.name"
                    v-on:click="addToShelf(s.id)"
                    :style="{boxShadow: s.doesContainBook ? `${s.color} inset 0 0 0 3px` : null}">
                    <i class="material-icons-outlined" :style="{color: s.color}">
                        {{s.icon ?? "bookmark_border"}}
                    </i>
                </button>

                <button title="All bookshelves" class="shelf action-btn" v-on:click="showShelves = true">
                    <icon icon="more_horiz"></icon>
                </button>
            }
        </div>

        @* <cache expires-after="TimeSpan.FromMinutes(60)"> *@
            
            <div class="titlebar">
                <cdn-img src="@Model.Rating.Icon" alt="Rated: @Model.Rating.Name" title="Rating: @Model.Rating.Name" class="rating"/>
                <span style="display:none" itemprop="contentRating">@Model.Rating.Name</span>
                <h1 class="title" itemprop="name">@Model.Title</h1>
            </div>

            <div class="tags" itemprop="keywords">
                <story-status status="@Model.Status"></story-status>
                @foreach (var t in Model.Tags)
                {
                    <tag tag="@t"></tag>
                }
            </div>

            <div class="main">

                <cdn-img src="@Model.Cover" alt="@Model.Title cover image" class="cover" itemprop="thumbnailUrl"/>

                <div class="description" itemprop="abstract">
                    <markdown>@Model.Description</markdown>
                </div>

            </div>
        @* </cache> *@
    </div>
    
    <div class="info">
        <span class="word-count">@Model.WordCount.ToString("N0") words</span>
        <span class="chapter-count">@Model.ChapterCount chapters</span>
        <time class="release-date" datetime="@Model.ReleaseDate.ToString("yyyy-MM-dd HH:mm", CultureInfo.InvariantCulture)" itemprop="datePublished">
            published @Model.ReleaseDate.ToString("dd MMMM yyyy", CultureInfo.InvariantCulture)
        </time>
        
        <div class="spacer"></div>
        
        @if (User.Identity?.IsAuthenticated ?? false)
        {
            <a v-on:click="addToFolder">Add to folder</a>
        }
            <a v-on:click="showClubs">Featured in clubs</a>
    </div>

    <ol class="chapters">
        @if (Model.Chapters.Count <= 0)
        {
            <li class="chapter">
                <div class="title">No chapters found</div>
            </li>
        }
        else
        {
            foreach (var c in Model.Chapters.OrderBy(c => c.Order))
            {
                <li class="chapter">
                    <div class="left">
                        
                        <button class="read-status"
                                aria-label="Chapter read status"
                                :class="read.includes(@c.Id) ? 'active' : ''"
                                v-on:click="markRead(@c.Id)">
                        </button>

                        <span class="order">@c.Order</span>
                        
                        <a class="title" asp-page="/Chapter" asp-route-id="@c.Id" asp-route-slug="@c.Slug">@c.Title</a>
                        
                        <time class="date" datetime="@c.PublishDate.ToString("yyyy-MM-dd HH:mm", CultureInfo.InvariantCulture)">
                            @c.PublishDate.ToString("dd MMMM yyyy", CultureInfo.InvariantCulture)
                        </time>
                        
                    </div>
                    <div class="right">
                        <span class="word-count">@c.WordCount.ToString("N0") words</span>
                    </div>
                </li>
            } 
        }
    </ol>

    @if (User.Identity?.IsAuthenticated ?? false)
    {
        <div class="my-modal" v-if="showShelves" v-on:click.self="showShelves = false">
            <div class="content">
                <h3>Add to bookshelf</h3>
                <ul class="items-list">
                    <li v-for="s in shelves" :style="{boxShadow: s.doesContainBook ? `${s.color} inset 0 0 0 3px` : null}">
                        <div class="deco" v-bind:style="{background: s.color}">
                            <i class="material-icons-outlined">{{s.icon ?? "bookmark_border"}}</i>
                        </div>
                        <button class="main" :href="'/Shelf/' + s.id" v-on:click="addToShelf(s.id)">
                            <h3 class="name">{{ s.name }} â€“ {{ s.count }}</h3>
                            <span class="desc">{{ s.description }}</span>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
            
        <club-folder-selector 
            ref="folderSelect"
            cdn="@Config.Cdn"
            :story-id="@Model.Id"
            clubs-route="@Url.RouteUrl(nameof(ClubsController))"
            folders-route="@Url.RouteUrl(nameof(FoldersController))">
        </club-folder-selector>
    }
    
    <clubs-with-story
        ref="featuredIn"
        cdn="@Config.Cdn"
        :story-id="@Model.Id"
        clubs-route="@Url.RouteUrl(nameof(ClubsController))">
    </clubs-with-story>
    
    <report-modal
        ref="reportModal"
        :item-id="@Model.Id"
        item-type="@EReportableContentTypes.Story"
        reports-route="@Url.RouteUrl(nameof(ReportsController))">
    </report-modal>
    
    <div id="votes-route" v-if="!votesRoute" data-route="@Url.RouteUrl(nameof(VotesController))"></div>
    <div id="shelves-route" v-if="!shelvesRoute" data-route="@Url.RouteUrl(nameof(ShelvesController))"></div>
    <div id="reads-route" v-if="!readsRoute" data-route="@Url.RouteUrl(nameof(ChaptersReadController))"></div>
    <div id="story-id" v-if="!storyId" data-id="@Model.Id"></div>
    @Html.AntiForgeryToken()
</div>


@Html.Resource(@<script src="~/js/dist/components/folder-tree-component.min.js" asp-append-version="true"></script>)
@Html.Resource(@<script src="~/js/dist/components/club-folder-selector-component.min.js" asp-append-version="true"></script>)
@Html.Resource(@<script src="~/js/dist/components/clubs-with-story-component.min.js" asp-append-version="true"></script>)
@Html.Resource(@<script src="~/js/dist/components/textarea-counter-component.min.js" asp-append-version="true"></script>)
@Html.Resource(@<script src="~/js/dist/components/report-modal.min.js" asp-append-version="true"></script>)

@Html.Resource(@<script src="~/js/dist/story.min.js" asp-append-version="true"></script>)