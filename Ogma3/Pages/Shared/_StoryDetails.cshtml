@using System.Globalization
@using Ogma3.Api
@using Ogma3.Api.V1
@using Ogma3.Pages.User
@using Ogma3.Services
@model Ogma3.Data.Models.Story

<div id="story-app">
    <div id="story-details" class="story-details" itemscope itemtype="https://schema.org/Book">

        <div class="actions">

            <button class="votes" v-bind:class="didVote ? 'active' : ''" v-on:click="vote">
                <i class="material-icons-outlined">{{didVote ? 'star' : 'star_border'}}</i>
                <span class="count">{{score}}</span>
            </button>

            <div class="spacer"></div>

            <button 
                class="shelf" 
                v-for="s in shelves.filter(s => s.isQuick || s.isDefault)" 
                :title="s.name"
                v-on:click="addToShelf(s.id)" 
                :style="{boxShadow: s.doesContainBook ? `${s.color} inset 0 0 0 3px` : null}">
                <i class="material-icons-outlined" :style="{color: s.color}">
                    {{s.icon ?? "bookmark_border"}}
                </i>
            </button>

            <button class="shelf" v-on:click="showShelves = true">
                <icon icon="more_horiz"></icon>
            </button>

        </div>

        <div class="titlebar">
            <img src="@Model.Rating.Icon" alt="Rated: @Model.Rating.Name" title="@Model.Rating.Name" class="rating">
            <span style="display:none" itemprop="contentRating">@Model.Rating.Name</span>
            <h1 class="title" itemprop="name">@Model.Title</h1>
        </div>

        <div class="tags" itemprop="keywords">
            <partial name="_StoryStatus" model="@Model.Status"></partial>
            @foreach (var t in Model.Tags)
            {
                if (t.Namespace is null)
                {
                    <tag href="/Tag/@t.Id/@t.Slug">@t.Name</tag>
                }
                else
                {
                    <tag href="/Tag/@t.Id/@t.Slug" color="@t.Namespace.Color">@t.Namespace.Name:@t.Name</tag>
                }
            }
        </div>

        <div class="main">

            @if (Model.Cover != null)
            {
                <img src="@Model.Cover" alt="@Model.CoverId" class="cover" itemprop="thumbnailUrl">
            }
            <a asp-page="/User/Index" asp-route-name="@Model.Author.UserName">
                <h2 class="author" itemprop="author">By @Model.Author.UserName</h2>
            </a>
            <div class="description" itemprop="abstract">
                <markdown>@Model.Description</markdown>
            </div>

        </div>
    </div>
    
    <div class="info">
        <span class="word-count">@Model.WordCount.ToString("N0") words</span>
        <span class="chapter-count">@Model.ChapterCount chapters</span>
        <time class="release-date" datetime="@Model.ReleaseDate.ToString("yyyy-MM-dd HH:mm", CultureInfo.InvariantCulture)" itemprop="datePublished">
            published @Model.ReleaseDate.ToString("dd MMMM yyyy", CultureInfo.InvariantCulture)
        </time>
    </div>

    <ol class="chapters">
        @if (Model.Chapters.Count <= 0)
        {
            <a class="chapter">
                <div class="title">No chapters found</div>
            </a>
        }
        else
        {
            @foreach (var c in Model.Chapters.OrderBy(c => c.Order))
            {
                <div class="chapter">
                    <div class="left">
                        <button class="read-status"
                                :class="read.includes(@c.Id) ? 'active' : ''"
                                v-on:click="markRead(@c.Id)">
                        </button>
                        <span class="order">@c.Order</span>
                        <a class="title" asp-page="/Chapter" asp-route-id="@c.Id" asp-route-slug="@c.Slug">@c.Title</a>
                        <time class="date" datetime="@c.PublishDate.ToString("yyyy-MM-dd HH:mm", CultureInfo.InvariantCulture)">
                            @c.PublishDate.ToString("dd MMMM yyyy", CultureInfo.InvariantCulture)
                        </time>
                    </div>
                    <div class="right">
                        <span class="word-count">@c.WordCount.ToString("N0") words</span>
                    </div>
                </div>
            } 
        }
        @if (User.Identity.IsAuthenticated && Model.Author.IsLoggedIn(User))
        {
            <a class="btn btn-block btn-outline-primary" asp-page="./Chapters/Create" asp-route-id="@Model.Id">
                <icon icon="add"></icon>
                Create New
            </a>
        }
    </ol>

    <div class="my-modal" v-if="showShelves" v-on:click.self="showShelves = false">
        <div class="content">
            <h3>Add to bookshelf</h3>
            <ul class="items-list">
                <li v-for="s in shelves" :style="{boxShadow: s.doesContainBook ? `${s.color} inset 0 0 0 3px` : null}">
                    <div class="deco" v-bind:style="{background: s.color}">
                        <i class="material-icons-outlined">{{s.icon ?? "bookmark_border"}}</i>
                    </div>
                    <button class="main" :href="'/Shelf/' + s.id" v-on:click="addToShelf(s.id)">
                        <h3 class="name">{{ s.name }} â€“ {{ s.count }}</h3>
                        <span class="desc">{{ s.description }}</span>
                    </button>
                </li>
            </ul>
        </div>
    </div>
    
    
    <div id="votes-route" v-if="!votesRoute" data-route="@Url.RouteUrl(nameof(VotesController))"></div>
    <div id="shelves-route" v-if="!shelvesRoute" data-route="@Url.RouteUrl(nameof(ShelvesController))"></div>
    <div id="reads-route" v-if="!readsRoute" data-route="@Url.RouteUrl(nameof(ChaptersReadController))"></div>
    <div id="story-id" v-if="!storyId" data-id="@Model.Id"></div>
    @Html.AntiForgeryToken()
</div>


@Html.Resource(@<script src="~/js/dist/story.min.js" asp-append-version="true"></script>);