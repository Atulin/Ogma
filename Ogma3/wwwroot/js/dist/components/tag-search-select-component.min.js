Vue.component("tag-search-select",{props:{min:{type:Number,default:0},label:{type:String,required:!0},desc:{type:String,required:!1,default:null},validateMsg:{type:String,default:null},tagsApi:{type:String,required:!0},storyId:{type:Number,default:null},preselected:{type:Array,default:null},inline:{type:Boolean,default:!1},disableWhenEmpty:{type:Boolean,default:!1},hideLabels:{type:Boolean,default:!1}},data:function(){return{name:this.label.replace(/\s+/g,"").toLowerCase(),loading:!0,options:[],selected:[],search:"",highlighted:null,focused:!1,disable:!1}},computed:{validate:function(){return this.selected.length>=this.min},validationString:function(){return this.validateMsg.replace("{0}",""+this.min)},filtered(){return this.options.filter(e=>{let t=e.name.toLowerCase().includes(this.search.toLowerCase()),s=e.namespace&&e.namespace.toLowerCase().includes(this.search.toLowerCase());return(t||s)&&!this.selected.some(t=>t.id===e.id)&&this.search.length>0})}},methods:{handleInputKeys:function(e){switch(e.key){case"Backspace":this.search.length<=0&&this.selected.pop();break;case"ArrowUp":null!==this.highlighted&&e.preventDefault(),this.highlighted>0?this.highlighted--:this.highlighted=null;break;case"ArrowDown":null!==this.highlighted&&e.preventDefault(),null===this.highlighted?this.highlighted=0:this.highlighted<this.filtered.length-1&&this.highlighted++;break;case" ":case"Enter":null!==this.highlighted&&(e.preventDefault(),this.highlighted=0,this.selected.pushUnique(JSON.parse(JSON.stringify(this.filtered[this.highlighted]))))}},checkDisabled:function(){return this.disable=this.selected.length<=0,this.disable},onClose:function(){this.focused=!1}},created(){axios.get(this.tagsApi+"/all").then(e=>{this.options=e.data,this.loading=!1,this.storyId&&axios.get(`${this.tagsApi}/story/${this.storyId}`).then(e=>{this.selected=e.data,this.selected.forEach(e=>this.options.find(t=>t.id===e.id).hidden=!0)}).catch(console.error),this.preselected&&(this.selected=this.options.filter(e=>-1!==this.preselected.indexOf(e.id)))}).catch(console.error)},template:'\n        <div class="tag-search-select"\n             v-on:focusin="focused = true">\n            <select class="output" \n                    :name="name" \n                    multiple="multiple" \n                    :id="name" \n                    :disabled="disable">\n                <option v-for="s in selected" :value="s.id" selected>{{s.name}}</option>\n            </select>\n    \n            <div class="o-form-group tag-search" \n                 :class="inline ? \'inline\' : null"\n                 :style="{ marginTop: hideLabels ? 0 : null }"\n                 v-closable="{\n                    exclude: [\'search\'],\n                    handler: \'onClose\'\n                 }">\n                <template v-if="!hideLabels">\n                  <label :for="name">{{label.replace( /([A-Z])/g, " $1" )}}</label>\n                  <p class="desc" v-if="desc && !inline">{{desc}}</p>\n                </template>\n    \n                <div class="searchbar" ref="search">\n                  <div class="tags">\n                    \n                    <div class="tag" v-for="s in selected">\n                      <div class="bg" v-bind:style="{background: s.namespaceColor}"></div>\n                      <span class="name">\n                        {{s.namespaceName ? s.namespaceName+\':\' : \'\'}}{{s.name}}\n                        <i class="material-icons-outlined" v-on:click="selected.remove(s)">clear</i>\n                      </span>\n                    </div>\n                    \n                    <input type="text"\n                           class="search"\n                           v-model="search"\n                           v-on:keydown="handleInputKeys"\n                           placeholder="Search...">\n                  </div>\n\n                  <ol v-if="!loading && focused" class="search-results">\n                    <li v-for="(o, idx) in filtered"\n                        :style="{background: o.rgba}"\n                        :class="highlighted === idx ? \'hl\' : null"\n                        v-on:click="selected.pushUnique(o)">\n                      <span class="name">{{o.namespace ? o.namespace+\':\' : \'\'}}{{o.name}}</span>\n                    </li>\n                  </ol>\n                </div>\n    \n            </div>\n\n            <span v-if="!validate && validateMsg">{{validationString}}</span>\n        </div>\n    '});
//# sourceMappingURL=tag-search-select-component.min.js.map
