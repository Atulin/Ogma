{"version":3,"sources":["hashparser.min.js","hashparser.ts"],"names":["Object","defineProperty","exports","value","HashParser","[object Object]","hash","this","out","Map","params","substr","split","param","set"],"mappings":"AAAA,aACAA,OAAOC,eAAeC,QAAS,aAAc,CAAEC,OAAO,IACtDD,QAAQE,gBAAa,ECFrB,MAAaA,EAGTC,YAAYC,GACRC,KAAKD,KAAOA,EAGTD,QAEH,IAAIG,EAA4B,IAAIC,IAChCC,EAAwBH,KAAKD,KAAKK,OAAO,GAAGC,MAAM,KACtD,IAAK,IAAIC,KAASH,EAAQ,CACtB,IAAIE,EAAuBC,EAAMD,MAAM,KACvCJ,EAAIM,IAAIF,EAAM,GAAIA,EAAM,IAE5B,OAAOJ,GAffN,QAAAE,WAAAA","file":"hashparser.min.js","sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.HashParser=void 0;class s{constructor(s){this.hash=s}parse(){let s=new Map,e=this.hash.substr(1).split(\"+\");for(let t of e){let e=t.split(\".\");s.set(e[0],e[1])}return s}}exports.HashParser=s;\n//# sourceMappingURL=hashparser.min.js.map\n","export class HashParser {\r\n    private hash : string;\r\n    \r\n    constructor(hash: string) {\r\n        this.hash = hash;\r\n    }\r\n    \r\n    public parse() : Map<string, string> \r\n    {\r\n        let out : Map<string, string> = new Map();\r\n        let params: Array<string> = this.hash.substr(1).split('+');\r\n        for (let param of params) {\r\n            let split: Array<string> = param.split('.');\r\n            out.set(split[0], split[1]);\r\n        }\r\n        return out;\r\n    }\r\n}"]}