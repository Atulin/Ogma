var atags_vue=new Vue({el:"#app",data:{form:{name:null,desc:null,namespace:null,id:null},lens:{minNameLength:5,maxNameLength:20,minDescLength:10,maxDescLength:100},err:[],routes:{tags:null,namespaces:null},tags:[],namespaces:[]},methods:{createTag:function(b){var a=this;b.preventDefault();this.err=[];(this.form.name.length>this.lens.maxNameLength||this.form.name.length<this.lens.minNameLength)&&this.err.push("Name has to be between "+this.lens.minNameLength+" and "+this.lens.maxNameLength+" characters long.");
null!==this.form.desc&&this.form.desc.length>this.lens.maxDescLength&&this.err.push("Description has to be at most "+this.lens.maxDescLength+" characters long.");0<this.err.length||(console.info(this.form.name),this.form.name&&(null===this.form.id?axios.post(this.routes.tags,{name:this.form.name,namespaceId:this.form.namespace,description:this.form.desc}).then(function(b){a.getTags()}).catch(function(a){console.log(a)}):axios.put(this.routes.tags+"/"+this.form.id,{id:this.form.id,name:this.form.name,
namespaceId:this.form.namespace,description:this.form.desc}).then(function(b){a.getTags()}).catch(function(a){console.log(a)}).then(function(b){a.form.name=a.form.desc=a.form.namespace=a.form.id=null})))},getTags:function(){var b=this;axios.get(this.routes.tags).then(function(a){b.tags=a.data}).catch(function(a){console.log(a)})},getNamespaces:function(){var b=this;axios.get(this.routes.namespaces).then(function(a){b.namespaces=a.data}).catch(function(a){console.log(a)})},deleteTag:function(b){var a=
this;confirm("Delete permanently?")&&axios.delete(this.routes.tags+"/"+b.id).then(function(b){a.getTags()}).catch(function(a){console.log(a)})},editTag:function(b){this.form.name=b.name;this.form.desc=b.description;this.form.namespace=b.namespaceId;this.form.id=b.id},cancelEdit:function(){this.form.name=this.form.desc=this.form.namespace=this.form.id=null}},mounted:function(){var b=this;this.routes.tags=document.getElementById("tag-route").dataset.route;this.routes.namespaces=document.getElementById("ns-route").dataset.route;
axios.get(this.routes.tags+"/validation").then(function(a){b.lens=a.data}).catch(function(a){return console.error(a)});this.getTags();this.getNamespaces()}});
