{"version":3,"sources":["admin/quotes.min.js"],"names":["quotes_vue","Vue","el","data","form","body","author","err","quotes","route","json","search","methods","getQuotes","axios","get","this","then","response","catch","error","console","log","deleteQuote","q","confirm","delete","id","res","filter","i","editQuote","fromJson","post","JSON","parse","computed","[object Object]","item","toLowerCase","indexOf","document","getElementById","dataset"],"mappings":"AAAA,IAAIA,WAAa,IAAIC,IAAI,CACrBC,GAAI,OACJC,KAAM,CACFC,KAAM,CACFC,KAAM,KACNC,OAAQ,MAEZC,IAAK,GACLC,OAAQ,GACRC,MAAO,KACPC,KAAM,KACNC,OAAQ,IAEZC,QAAS,CAGLC,UAAW,WACPC,MAAMC,IAAIC,KAAKP,OACVQ,KAAKC,IACFF,KAAKR,OAASU,EAASf,OAE1BgB,MAAMC,IACHC,QAAQC,IAAIF,MAKxBG,YAAa,SAASC,GACfC,QAAQ,wBACPX,MAAMY,OAAOV,KAAKP,MAAQ,IAAMe,EAAEG,IAC7BV,KAAKW,IACFZ,KAAKR,OAASQ,KAAKR,OAAOqB,OAAOC,GAAKA,EAAEH,KAAOC,EAAID,MAEtDR,MAAME,QAAQD,QAI3BW,UAAW,aAGXC,SAAU,WACNlB,MAAMmB,KAAK,mBAAoBC,KAAKC,MAAMnB,KAAKN,OAC1CO,KAAKI,QAAQC,KACbH,MAAME,QAAQD,SAI3BgB,SAAU,CACNC,WACI,OAAOrB,KAAKR,OAAOqB,OAAOS,GACfA,EAAKjC,KAAKkC,cAAcC,QAAQxB,KAAKL,OAAO4B,gBAAkB,GAC9DD,EAAKhC,OAAOiC,cAAcC,QAAQxB,KAAKL,OAAO4B,gBAAkB,KAKnFF,UAEIrB,KAAKP,MAAQgC,SAASC,eAAe,SAASC,QAAQlC,MAEtDO,KAAKH","file":"quotes.min.js","sourcesContent":["let quotes_vue = new Vue({\r\n    el: \"#app\",\r\n    data: {\r\n        form: {\r\n            body: null,\r\n            author: null\r\n        },\r\n        err: [],\r\n        quotes: [],\r\n        route: null,\r\n        json: null,\r\n        search: '',\r\n    },\r\n    methods: {\r\n        \r\n        // Gets all existing namespaces\r\n        getQuotes: function () {\r\n            axios.get(this.route)\r\n                .then(response => {\r\n                    this.quotes = response.data\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n        \r\n        // TODO: Fix this\r\n        deleteQuote: function(q) {\r\n            if(confirm(\"Delete permanently?\")) {\r\n                axios.delete(this.route + '/' + q.id)\r\n                    .then(res => {\r\n                        this.quotes = this.quotes.filter(i => i.id !== res.id);\r\n                    })\r\n                    .catch(console.error);\r\n            }\r\n        },\r\n        \r\n        editQuote: function() {},\r\n                \r\n        // Upload Json\r\n        fromJson: function() {\r\n            axios.post('/api/quotes/json', JSON.parse(this.json))\r\n                .then(console.log)\r\n                .catch(console.error)\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        filtered() {\r\n            return this.quotes.filter(item => {\r\n                return item.body.toLowerCase().indexOf(this.search.toLowerCase()) > -1\r\n                    || item.author.toLowerCase().indexOf(this.search.toLowerCase()) > -1\r\n            })\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        // Grab the route from route helper\r\n        this.route = document.getElementById('route').dataset.route;\r\n        // Grab the initial set of namespaces\r\n        this.getQuotes();\r\n    }\r\n});"]}