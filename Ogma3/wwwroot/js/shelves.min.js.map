{"version":3,"sources":["shelves.min.js"],"names":["shelves_vue","Vue","el","data","form","name","desc","pub","quick","color","icon","id","lens","minNameLength","maxNameLength","maxDescLength","showForm","csrf","err","shelves","route","methods","createShelf","e","preventDefault","this","length","push","axios","post","description","isPublic","isQuick","Number","headers","RequestVerificationToken","then","_","getShelves","catch","error","console","log","put","shelf","cancelEdit","get","response","deleteShelf","t","confirm","delete","editShelf","[object Object]","document","getElementById","dataset","querySelector","value","r"],"mappings":"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","file":"shelves.min.js","sourcesContent":["let shelves_vue = new Vue({ \r\n    el: \"#app\",\r\n    data: {\r\n        form: {\r\n            name: null,\r\n            desc: null,\r\n            pub: false,\r\n            quick: false,\r\n            color: null,\r\n            icon: null,\r\n            id: null\r\n        },\r\n        lens: {\r\n            minNameLength:3,\r\n            maxNameLength:50,\r\n            maxDescLength:255\r\n        },\r\n        showForm: false,\r\n        csrf: null,\r\n        err: [],\r\n        shelves: [],\r\n        route: null\r\n    },\r\n    methods: {\r\n\r\n        // Contrary to its name, it also modifies a shelf if needed.\r\n        // It was simply easier to slap both functionalities into a single function.\r\n        createShelf: function(e) {\r\n            e.preventDefault();\r\n            \r\n            \r\n            // Validation\r\n            this.err = [];\r\n            if (this.form.name.length > this.lens.maxNameLength || this.form.name.length < this.lens.minNameLength) \r\n                this.err.push(`Name has to be between ${this.lens.minNameLength} and ${this.lens.maxNameLength} characters long.`);\r\n            if (this.form.desc && this.form.desc.length > this.lens.maxDescLength) \r\n                this.err.push(`Description has to be less than ${this.lens.maxDescLength} characters long.`);\r\n            if (this.err.length > 0) return;\r\n            \r\n\r\n            if (this.form.name) {\r\n\r\n                // If no ID has been set, that means it's a new shelf.\r\n                // Thus, we POST it.\r\n                if (this.form.id === null) {\r\n                    axios.post(this.route,\r\n                        {\r\n                            name: this.form.name,\r\n                            description: this.form.desc,\r\n                            isPublic: this.form.pub,\r\n                            isQuick: this.form.quick,\r\n                            color: this.form.color,\r\n                            icon: Number(this.form.icon)\r\n                        },{\r\n                            headers: { \"RequestVerificationToken\" : this.csrf }\r\n                        })\r\n                        .then(_ => {\r\n                            this.getShelves()\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                        });\r\n                    \r\n                // If the ID is set, that means it's an existing shelf.\r\n                // Thus, we PUT it.\r\n                } else {\r\n                    axios.put(this.route + '/' + this.form.id,\r\n                        {\r\n                            id: this.form.id,\r\n                            name: this.form.name, \r\n                            description: this.form.desc,\r\n                            isPublic: this.form.pub,\r\n                            isQuick: this.form.quick,\r\n                            color: this.form.color,\r\n                            shelf: this.form.shelf,\r\n                            icon: Number(this.form.icon)\r\n                        },{\r\n                            headers: { \"RequestVerificationToken\" : this.csrf }\r\n                        })\r\n                        .then(_ => {\r\n                            this.getShelves()\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                        })\r\n                        // Clear the form too\r\n                        .then(_ => {\r\n                            this.cancelEdit();\r\n                            this.showForm = false;\r\n                        });\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        // Gets all existing shelves\r\n        getShelves: function() {\r\n            axios.get(this.route + '/user')\r\n                .then(response => {\r\n                    this.shelves = response.data\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n        // Deletes a selected shelf\r\n        deleteShelf: function(t) {\r\n            if (confirm(\"Delete permanently?\")) {\r\n                axios.delete(this.route + '/' + t.id,\r\n                    null,\r\n                    {\r\n                        headers: { \"RequestVerificationToken\" : this.csrf }\r\n                    })\r\n                    .then(_ => {\r\n                        this.getShelves()\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n        },\r\n\r\n        // Throws a shelf from the list into the editor\r\n        editShelf: function(t) {\r\n            this.form.name  = t.name;\r\n            this.form.desc  = t.description;\r\n            this.form.id    = t.id;\r\n            this.form.color = t.color;\r\n            this.form.quick = t.isQuick;\r\n            this.form.pub   = t.isPublic;\r\n            this.showForm   = true;\r\n        },\r\n\r\n        // Clears the editor\r\n        cancelEdit: function() {\r\n            this.form.name =\r\n                this.form.desc =\r\n                    this.form.id = \r\n                        this.form.color = null;\r\n            this.form.isQuick = \r\n                this.form.isPublic = false;\r\n        }\r\n    },\r\n    \r\n    mounted() {\r\n        // Grab the route from route helper\r\n        this.route = document.getElementById('route').dataset.route;\r\n        // Get CSRF token\r\n        this.csrf = document.querySelector('input[name=__RequestVerificationToken').value;\r\n        // Get validation\r\n        axios.get(this.route + '/validation')\r\n            .then(r => {\r\n                this.lens = r.data;\r\n            })\r\n            .catch(e => console.error(e));\r\n        // Grab the initial set of shelves\r\n        this.getShelves();\r\n    }\r\n});"]}