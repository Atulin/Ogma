{"version":3,"sources":["shelves.min.js"],"names":["shelves_vue","Vue","el","data","form","name","desc","pub","quick","color","icon","id","lens","minNameLength","maxNameLength","maxDescLength","showForm","csrf","err","shelves","route","owner","methods","createShelf","e","preventDefault","this","document","querySelector","value","length","push","axios","post","description","isPublic","isQuick","Number","headers","RequestVerificationToken","then","_","getShelves","catch","error","console","log","put","shelf","cancelEdit","get","response","deleteShelf","t","confirm","delete","editShelf","[object Object]","getElementById","dataset","r"],"mappings":"AAAA,IAAIA,YAAc,IAAIC,IAAI,CACtBC,GAAI,OACJC,KAAM,CACFC,KAAM,CACFC,KAAM,KACNC,KAAM,KACNC,KAAK,EACLC,OAAO,EACPC,MAAO,KACPC,KAAM,KACNC,GAAI,MAERC,KAAM,CACFC,cAAc,EACdC,cAAc,GACdC,cAAc,KAElBC,UAAU,EACVC,KAAM,KACNC,IAAK,GACLC,QAAS,GACTC,MAAO,KACPC,MAAO,MAEXC,QAAS,CAILC,YAAa,SAASC,GAClBA,EAAEC,iBAGFC,KAAKT,KAAOU,SAASC,cAAc,yCAAyCC,MAG5EH,KAAKR,IAAM,IACPQ,KAAKtB,KAAKC,KAAKyB,OAASJ,KAAKd,KAAKE,eAAiBY,KAAKtB,KAAKC,KAAKyB,OAASJ,KAAKd,KAAKC,gBACrFa,KAAKR,IAAIa,KAAK,0BAA0BL,KAAKd,KAAKC,qBAAqBa,KAAKd,KAAKE,kCACjFY,KAAKtB,KAAKE,MAAQoB,KAAKtB,KAAKE,KAAKwB,OAASJ,KAAKd,KAAKG,eACpDW,KAAKR,IAAIa,KAAK,mCAAmCL,KAAKd,KAAKG,kCAC3DW,KAAKR,IAAIY,OAAS,GAGlBJ,KAAKtB,KAAKC,OAIW,OAAjBqB,KAAKtB,KAAKO,GACVqB,MAAMC,KAAKP,KAAKN,MACZ,CACIf,KAAMqB,KAAKtB,KAAKC,KAChB6B,YAAaR,KAAKtB,KAAKE,KACvB6B,SAAUT,KAAKtB,KAAKG,IACpB6B,QAASV,KAAKtB,KAAKI,MACnBC,MAAOiB,KAAKtB,KAAKK,MACjBC,KAAM2B,OAAOX,KAAKtB,KAAKM,OACzB,CACE4B,QAAS,CAAEC,yBAA6Bb,KAAKT,QAEhDuB,KAAKC,IACFf,KAAKgB,eAERC,MAAMC,IACHC,QAAQC,IAAIF,KAMpBZ,MAAMe,IAAIrB,KAAKN,MAAQ,IAAMM,KAAKtB,KAAKO,GACnC,CACIA,GAAIe,KAAKtB,KAAKO,GACdN,KAAMqB,KAAKtB,KAAKC,KAChB6B,YAAaR,KAAKtB,KAAKE,KACvB6B,SAAUT,KAAKtB,KAAKG,IACpB6B,QAASV,KAAKtB,KAAKI,MACnBC,MAAOiB,KAAKtB,KAAKK,MACjBuC,MAAOtB,KAAKtB,KAAK4C,MACjBtC,KAAM2B,OAAOX,KAAKtB,KAAKM,OACzB,CACE4B,QAAS,CAAEC,yBAA6Bb,KAAKT,QAEhDuB,KAAKC,IACFf,KAAKgB,eAERC,MAAMC,IACHC,QAAQC,IAAIF,KAGfJ,KAAKC,IACFf,KAAKuB,aACLvB,KAAKV,UAAW,MAOpC0B,WAAY,WACRV,MAAMkB,IAAIxB,KAAKN,MAAQ,SAAWM,KAAKL,OAClCmB,KAAKW,IACFzB,KAAKP,QAAUgC,EAAShD,OAE3BwC,MAAMC,IACHC,QAAQC,IAAIF,MAKxBQ,YAAa,SAASC,GACdC,QAAQ,wBACRtB,MAAMuB,OAAO7B,KAAKN,MAAQ,IAAMiC,EAAE1C,GAC9B,KACA,CACI2B,QAAS,CAAEC,yBAA6Bb,KAAKT,QAEhDuB,KAAKC,IACFf,KAAKgB,eAERC,MAAMC,IACHC,QAAQC,IAAIF,MAM5BY,UAAW,SAASH,GAChB3B,KAAKtB,KAAKC,KAAQgD,EAAEhD,KACpBqB,KAAKtB,KAAKE,KAAQ+C,EAAEnB,YACpBR,KAAKtB,KAAKO,GAAQ0C,EAAE1C,GACpBe,KAAKtB,KAAKK,MAAQ4C,EAAE5C,MACpBiB,KAAKtB,KAAKI,MAAQ6C,EAAEjB,QACpBV,KAAKtB,KAAKG,IAAQ8C,EAAElB,SACpBT,KAAKV,UAAa,GAItBiC,WAAY,WACRvB,KAAKtB,KAAKC,KACNqB,KAAKtB,KAAKE,KACNoB,KAAKtB,KAAKO,GACNe,KAAKtB,KAAKK,MAAQ,KAC9BiB,KAAKtB,KAAKgC,QACNV,KAAKtB,KAAK+B,UAAW,IAIjCsB,UAEI/B,KAAKN,MAAQO,SAAS+B,eAAe,SAASC,QAAQvC,MAEtDM,KAAKL,MAAQM,SAAS+B,eAAe,SAASC,QAAQtC,MAEtDW,MAAMkB,IAAIxB,KAAKN,MAAQ,eAClBoB,KAAKoB,IACFlC,KAAKd,KAAOgD,EAAEzD,OAEjBwC,MAAMnB,GAAKqB,QAAQD,MAAMpB,IAE9BE,KAAKgB","file":"shelves.min.js","sourcesContent":["let shelves_vue = new Vue({ \r\n    el: \"#app\",\r\n    data: {\r\n        form: {\r\n            name: null,\r\n            desc: null,\r\n            pub: false,\r\n            quick: false,\r\n            color: null,\r\n            icon: null,\r\n            id: null\r\n        },\r\n        lens: {\r\n            minNameLength:3,\r\n            maxNameLength:50,\r\n            maxDescLength:255\r\n        },\r\n        showForm: false,\r\n        csrf: null,\r\n        err: [],\r\n        shelves: [],\r\n        route: null,\r\n        owner: null\r\n    },\r\n    methods: {\r\n\r\n        // Contrary to its name, it also modifies a shelf if needed.\r\n        // It was simply easier to slap both functionalities into a single function.\r\n        createShelf: function(e) {\r\n            e.preventDefault();\r\n            \r\n            // Set CSRF\r\n            this.csrf = document.querySelector('input[name=__RequestVerificationToken').value;\r\n            \r\n            // Validation\r\n            this.err = [];\r\n            if (this.form.name.length > this.lens.maxNameLength || this.form.name.length < this.lens.minNameLength) \r\n                this.err.push(`Name has to be between ${this.lens.minNameLength} and ${this.lens.maxNameLength} characters long.`);\r\n            if (this.form.desc && this.form.desc.length > this.lens.maxDescLength) \r\n                this.err.push(`Description has to be less than ${this.lens.maxDescLength} characters long.`);\r\n            if (this.err.length > 0) return;\r\n            \r\n\r\n            if (this.form.name) {\r\n\r\n                // If no ID has been set, that means it's a new shelf.\r\n                // Thus, we POST it.\r\n                if (this.form.id === null) {\r\n                    axios.post(this.route,\r\n                        {\r\n                            name: this.form.name,\r\n                            description: this.form.desc,\r\n                            isPublic: this.form.pub,\r\n                            isQuick: this.form.quick,\r\n                            color: this.form.color,\r\n                            icon: Number(this.form.icon)\r\n                        },{\r\n                            headers: { \"RequestVerificationToken\" : this.csrf }\r\n                        })\r\n                        .then(_ => {\r\n                            this.getShelves()\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                        }); \r\n                    \r\n                // If the ID is set, that means it's an existing shelf.\r\n                // Thus, we PUT it.\r\n                } else {\r\n                    axios.put(this.route + '/' + this.form.id,\r\n                        {\r\n                            id: this.form.id,\r\n                            name: this.form.name, \r\n                            description: this.form.desc,\r\n                            isPublic: this.form.pub,\r\n                            isQuick: this.form.quick,\r\n                            color: this.form.color,\r\n                            shelf: this.form.shelf,\r\n                            icon: Number(this.form.icon)\r\n                        },{\r\n                            headers: { \"RequestVerificationToken\" : this.csrf }\r\n                        })\r\n                        .then(_ => {\r\n                            this.getShelves()\r\n                        })\r\n                        .catch(error => {\r\n                            console.log(error);\r\n                        })\r\n                        // Clear the form too\r\n                        .then(_ => {\r\n                            this.cancelEdit();\r\n                            this.showForm = false;\r\n                        });\r\n                }\r\n\r\n            }\r\n        },\r\n        // Gets all existing shelves\r\n        getShelves: function() {\r\n            axios.get(this.route + '/user/' + this.owner)\r\n                .then(response => {\r\n                    this.shelves = response.data\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n        // Deletes a selected shelf\r\n        deleteShelf: function(t) {\r\n            if (confirm(\"Delete permanently?\")) {\r\n                axios.delete(this.route + '/' + t.id,\r\n                    null,\r\n                    {\r\n                        headers: { \"RequestVerificationToken\" : this.csrf }\r\n                    })\r\n                    .then(_ => {\r\n                        this.getShelves()\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n        },\r\n\r\n        // Throws a shelf from the list into the editor\r\n        editShelf: function(t) {\r\n            this.form.name  = t.name;\r\n            this.form.desc  = t.description;\r\n            this.form.id    = t.id;\r\n            this.form.color = t.color;\r\n            this.form.quick = t.isQuick;\r\n            this.form.pub   = t.isPublic;\r\n            this.showForm   = true;\r\n        },\r\n\r\n        // Clears the editor\r\n        cancelEdit: function() {\r\n            this.form.name =\r\n                this.form.desc =\r\n                    this.form.id = \r\n                        this.form.color = null;\r\n            this.form.isQuick = \r\n                this.form.isPublic = false;\r\n        },\r\n    },\r\n    \r\n    mounted() {\r\n        // Grab the route from route helper\r\n        this.route = document.getElementById('route').dataset.route;\r\n        // Get owner\r\n        this.owner = document.getElementById('owner').dataset.owner;\r\n        // Get validation\r\n        axios.get(this.route + '/validation')\r\n            .then(r => {\r\n                this.lens = r.data;\r\n            })\r\n            .catch(e => console.error(e));\r\n        // Grab the initial set of shelves\r\n        this.getShelves();\r\n    }\r\n});"]}