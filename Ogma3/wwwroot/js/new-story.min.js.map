{"version":3,"sources":["new-story.min.js"],"names":["Vue","el","data","title","max","min","current","hook","desc","options","selected","search","route","methods","[object Object]","x","this","includes","push","filter","e","id","filters","color","col","alpha","hexToArgb","computed","length","name","toLowerCase","namespace","document","getElementById","dataset","valLengthMax","valLengthMin","axios","get","then","res","catch","console","error"],"mappings":"AAAA,IAAIA,IAAI,CACJC,GAAI,SACJC,KAAM,CAEFC,MAAO,CACHC,IAAK,EACLC,IAAK,EACLC,QAAS,IAEbC,KAAM,CACFH,IAAK,EACLC,IAAK,EACLC,QAAS,IAEbE,KAAM,CACFJ,IAAK,EACLC,IAAK,EACLC,QAAS,IAIbG,QAAS,GACTC,SAAU,GACVC,OAAQ,GAGRC,MAAO,MAEXC,QAAS,CACLC,UAAUC,GACDC,KAAKN,SAASO,SAASF,IACxBC,KAAKN,SAASQ,KAAKH,IAE3BD,OAAOC,GACHC,KAAKN,SAAWM,KAAKN,SAASS,OAAOC,GAAKA,EAAEC,KAAON,EAAEM,MAI7DC,QAAS,CACLC,MAAO,SAASC,EAAKC,GACjB,OAAOC,UAAUF,EAAKC,KAG9BE,SAAU,CACNb,aACI,MAAO,GAAGE,KAAKb,MAAMG,QAAQsB,UAAUZ,KAAKb,MAAMC,OAEtDU,YACI,MAAO,GAAGE,KAAKT,KAAKD,QAAQsB,UAAUZ,KAAKT,KAAKH,OAEpDU,YACI,MAAO,GAAGE,KAAKR,KAAKF,QAAQsB,UAAUZ,KAAKR,KAAKJ,OAEpDU,WACI,OAAOE,KAAKP,QAAQU,OAAOJ,IAEnBA,EAAEc,KAAKC,cAAcb,SAASD,KAAKL,OAAOmB,gBACvCf,EAAEgB,UAAUD,cAAcb,SAASD,KAAKL,OAAOmB,iBACjDd,KAAKL,OAAOiB,OAAS,KAItCd,cACIE,KAAKJ,MAAQoB,SAASC,eAAe,SAASC,QAAQtB,MAEtD,IAAIT,EAAQ6B,SAASC,eAAe,eACpCjB,KAAKb,MAAMC,IAAMD,EAAM+B,QAAQC,aAC/BnB,KAAKb,MAAME,IAAMF,EAAM+B,QAAQE,aAE/B,IAAI7B,EAAOyB,SAASC,eAAe,cACnCjB,KAAKT,KAAKH,IAAMG,EAAK2B,QAAQC,aAC7BnB,KAAKT,KAAKF,IAAME,EAAK2B,QAAQE,aAE7B,IAAI5B,EAAOwB,SAASC,eAAe,qBACnCjB,KAAKR,KAAKJ,IAAMI,EAAK0B,QAAQC,aAC7BnB,KAAKR,KAAKH,IAAMG,EAAK0B,QAAQE,aAE7BC,MAAMC,IAAItB,KAAKJ,OACV2B,KAAKC,GAAOxB,KAAKP,QAAU+B,EAAItC,MAC/BuC,MAAMC,QAAQC","file":"new-story.min.js","sourcesContent":["new Vue({\r\n    el: '#story',\r\n    data: {\r\n        // Form counters\r\n        title: {\r\n            max: 0,\r\n            min: 0,\r\n            current: '',\r\n        },\r\n        hook: {\r\n            max: 0,\r\n            min: 0,\r\n            current: '',\r\n        },\r\n        desc: {\r\n            max: 0,\r\n            min: 0,\r\n            current: '',\r\n        },\r\n        \r\n        // Tag search\r\n        options: [],\r\n        selected: [],\r\n        search: '',\r\n        \r\n        // API routing\r\n        route: null\r\n    },  \r\n    methods: {\r\n        addUnique(x) {\r\n            if (!this.selected.includes(x))\r\n                this.selected.push(x);\r\n        },\r\n        remove(x) {\r\n            this.selected = this.selected.filter(e => e.id !== x.id);\r\n        }\r\n    },\r\n    // TODO: Fix colors\r\n    filters: { \r\n        color: function(col, alpha) {\r\n            return hexToArgb(col, alpha)\r\n        }  \r\n    },\r\n    computed: {\r\n        titleCount() {\r\n            return `${this.title.current.length}/${this.title.max}`;\r\n        },\r\n        hookCount() {\r\n            return `${this.hook.current.length}/${this.hook.max}`;\r\n        },\r\n        descCount() {\r\n            return `${this.desc.current.length}/${this.desc.max}`;\r\n        },\r\n        filtered() {\r\n            return this.options.filter(x => { \r\n                return (\r\n                    x.name.toLowerCase().includes(this.search.toLowerCase())\r\n                    || x.namespace.toLowerCase().includes(this.search.toLowerCase())\r\n                ) && this.search.length > 0\r\n            })\r\n        }\r\n    },\r\n    beforeMount() {\r\n        this.route = document.getElementById('route').dataset.route;\r\n\r\n        let title = document.getElementById('Input_Title');\r\n        this.title.max = title.dataset.valLengthMax;\r\n        this.title.min = title.dataset.valLengthMin;\r\n\r\n        let hook = document.getElementById('Input_Hook');\r\n        this.hook.max = hook.dataset.valLengthMax;\r\n        this.hook.min = hook.dataset.valLengthMin;\r\n\r\n        let desc = document.getElementById('Input_Description');\r\n        this.desc.max = desc.dataset.valLengthMax;\r\n        this.desc.min = desc.dataset.valLengthMin;\r\n\r\n        axios.get(this.route)\r\n            .then(res => this.options = res.data)\r\n            .catch(console.error)\r\n    }\r\n});\r\n"]}